
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // --- Helper Function ---
    // Safely checks if the currently authenticated user has the specified role.
    function isRole(role) {
      let userDocPath = /databases/$(database)/documents/users/$(request.auth.uid);
      return exists(userDocPath) && get(userDocPath).data.role == role;
    }
    
    // --- User Rules ---
    match /users/{userId} {
      // Allow a user to create their own user document.
      allow create: if request.auth.uid == userId;
      
      // Allow a user to read/update their own doc.
      // Allow tutors to read any user doc.
      allow read, update: if request.auth.uid == userId || isRole('tutor');
    }

    // --- Submission Rules ---
    match /submissions/{submissionId} {
      // A user with the 'student' role can create a submission for themselves.
      allow create: if isRole('student') && request.auth.uid == request.resource.data.studentId;
      
      // The owner (student) or any tutor can read.
      allow read: if request.auth.uid == resource.data.studentId || isRole('tutor');
                  
      // Update Rules:
      allow update: if 
        // A tutor can update any submission.
        isRole('tutor') || 
        // A student can update THEIR OWN submission IF its CURRENT status is NOT 'reviewed'.
        (isRole('student') && 
         request.auth.uid == resource.data.studentId && 
         resource.data.status != 'reviewed');
    }
  }
}
